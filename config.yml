title: Deploy To Azure Using Git Hooks and GitHub Actions
Getting Started:
  - Run the following command in your terminal from the repository you want to deploy => node Ourproject/main.js
  - Files/Folders created:-
    - A templates folder:- that will be used for getting the workflow file.
    - A give_inputs.txt file:- You are required to give the necessary inputs inside this file before starting with deploying your app.
    - A pre-commit hook:- This is present inside the .git/hooks folder (If you had any pre-exisiting hook with the same name, it gets saved as pre-commit.bkp)
    - A pre-push hook:- This is present inside the .git/hooks folder (If you had any pre-exisiting hook with the same name, it gets saved as pre-push.bkp)
    - An open_workflow_run file:- This is a JavaScript file which can be run after you are done with pushing your contents to GitHub. This will take you to the workflow run you triggered on the last push.
    - Apart from the files created, the .gitignore file is appended with the name of the files/folders so that no sensitive information is pushed to your GitHub account.

How to Deploy?:
  - First, you need to give the following MANDATORY inputs in the give_inputs.txt:
    
    - GitHub PAT Token:
      - This token will be used in creating secrets in your GitHub account which are required during the workflow execution.
      - The token should have "repo scope".
      - How to get the GitHub PAT token?:
        - Go to https://github.com
        - Go Settings in your account
        - Click on Developer Settings
        - Click on Personal access tokens and then further click on "Generate new token"
        - Give some note associated with the token for your aid
        - Select the repo scope for this token and Click on Generate token.
        - Make sure you copy the token being shown to you as you won't be able to get the value in future
        - Open the give_inputs.txt file in your local repository. 
        - Paste the content to the right side of "github_PAT:" mentioned in the file. DO NOT CHANGE ANYTHING ELSE. The input format should be like this => "github_PAT:<GitHub_PAT>"
        - That's it for the GitHub PAT token.
    
    - Azure Tenant ID:
      - The tenant id for your azure directory will be used for accessing and managing resources present.
      - How to get the Azure Tenant ID?:
        - Go to https://portal.azure.com
        - Go to Azure Active Directory
        - You will see a box with Tenant information written on it
        - Copy the tenant ID
        - Paste the content to the right side of "tenant_id:" mentioned in the file. DO NOT CHANGE ANYTHING ELSE. The input format should be like this => "tenant_id:<tenant_id>"

    - Subscription ID:
      - How to get the Subscription ID?:
        - Go to https://portal.azure.com
        - Go to Subscriptions
        - Select the subscription you want.
        - Copy the subscription id
        - Paste the content to the right side of "tenant_id:" mentioned in the file. DO NOT CHANGE ANYTHING ELSE. The input format should be like this => "subscription:<subscription_id>"

  - Next, you have two optional fields:

    - Resource Group:
      - You may give the resource group name in one of the following cases:-

        - If you have any resource group in your tenant and want to use some resource in that resource group
        - If you have any resource group in your tenant and want us to create a resource in that resource group
        - If you don't have a resource group by that name but want us to create one with the name you provide
      
      - Important note => "Resource group names only allow alphanumeric characters, periods, underscores, hyphens and parenthesis and cannot end in a period."
      - The input format should be like this => "resource_group:<resource group name>"
      - If you don't provide us with a resource group name then one will be created for you with the name => ResGrp${{Alpha numeric characters of your repository name}} => example - "ResGrpnodeexpressappshubag" where the repository name is "node-express-app-shubag"

    - Resource:
      - You may give the resource name in one of the following cases:-

        - If you have any resource in the resource group name you provided
        - If you don't have a resource by this name, but want one to be created in the resource group name you provided
        - If you don't have a resource by this name, but want one to be created in the resource group which we custom create for you
      
      - Important note => "Resource names only allow alphanumeric characters"
      - The input format should be like this => "resource:<resource name>"
      - If you don't provide us with a resource group name then one will be created for you with the name => Res${{Alpha numeric characters of your repository name}} => example - "Resnodeexpressappshubag" where the repository name is "node-express-app-shubag"

